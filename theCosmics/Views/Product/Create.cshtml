@model theCosmics.Models.Product

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Product</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Category)
        </div>
        @{
            // TODO: MAke this a method to dynamically get/post the data
            List<SelectListItem> listItems = new List<SelectListItem>();
            listItems.Add(new SelectListItem
                {
                    Text = "Apparel",
                    Value = "Apparel"
                });
            listItems.Add(new SelectListItem
            {
                Text = "Comics",
                Value = "Comics"
            });
            listItems.Add(new SelectListItem
            {
                Text = "Gadgets",
                Value = "Gadgets"
            });
            listItems.Add(new SelectListItem
            {
                Text = "Games",
                Value = "Games"
            });
            listItems.Add(new SelectListItem
            {
                Text = "Movies",
                Value = "Movies"
            });
        }
                
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Category, listItems, "-- Category --")
            @Html.ValidationMessageFor(model => model.Category)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProductName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ProductName)
            @Html.ValidationMessageFor(model => model.ProductName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Price)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Price)
            @Html.ValidationMessageFor(model => model.Price)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProductHeader)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ProductHeader)
            @Html.ValidationMessageFor(model => model.ProductHeader)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LongDescription)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.LongDescription, new {style = "width: 50%; height: 200px;"})
            @Html.ValidationMessageFor(model => model.LongDescription)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TrackingURL)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TrackingURL)
            @Html.ValidationMessageFor(model => model.TrackingURL)
        </div>
        <div>
            <label>Image</label>
            <p>Upload new image: <input type="file" name="Image" /></p>
        </div>
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Product", "Admin", new { Category = @ViewBag.Category } , null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
